)PANEL KEYLIST (ISRHLP2 ISR)
)ATTR
  ¢ TYPE(TEXT)    INTENS(LOW)  COLOR(YELLOW)
  ! TYPE(TEXT)    INTENS(LOW)  COLOR(WHITE)
  + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
  @ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
  # AREA(SCRL) EXTEND(ON)
)BODY EXPAND(¯¯) DEFAULT($¦_)
¢MXI - HELP - DA Command -------------------------------------------------------
!Option ===>_ZCMD
#MXIHAREA                                                                      #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
#                                                                              #
+
)AREA MXIHAREA
!Function
+  Displays the active address spaces in the system.
+
!Command Syntax
+ $DA jobmask   ONLY(type) NOT(type) ENQ(ON/OFF)
+ $   A=asid
+
!Keywords
+ $jobmask   +An optional masking pattern that can be used to filter the
+            +displayed list on all or part of the address space name.
+            +A wildcard character of '*' and a placeholder character of '%'
+            +can be used.
+            +The default value for jobmask is '*'.
+ $A=asid    +An alternative specification to jobmask that uses the hexadecimal
+            +address space id (ASID) rather than the jobname.
+            +Use this form of the command when there is more than one instance
+            +of an address space with the same name.
+ $ONLY(type)+Restrict the display to only show address spaces of a particular
+             type:
+            ¢STC += Started Tasks and System Address Spaces
+            ¢JOB += Batch Jobs
+            ¢TSU += TSO Users
+            ¢IN  += Address spaces that are swapped in
+            ¢OUT += Address spaces that are swapped out
+            ¢INIT+= Initiators
+ $NOT(type) +Restrict the display to not show address spaces of a particular
+             type:
+            ¢STC += Started Tasks and System Address Spaces
+            ¢JOB += Batch Jobs
+            ¢TSU += TSO Users
+            ¢IN  += Address spaces that are swapped in
+            ¢OUT += Address spaces that are swapped out
+            ¢INIT+= Initiators (Set as default)
+ $ENQ(ON)   +Show the enqueue information when the more detailed display is
+             invoked for a single address space.
+ $ENQ(OFF)  +Suppress the enqueue information when the more detailed display is
+             invoked for a single address space.
+
!Examples
+ $DA                    +Show all address spaces
+ $DA ONLY(INIT)         +Show only initiators
+ $DA ONLY(STC)          +Show all started tasks
+ $DA CIC* NOT(TSU)      +Show all address spaces that start 'CIC' that are not
+                        +TSO users.
+ $DA * ONLY(JOB) NOT(IN)+Show all batch jobs that are not swapped in
+ $DA * NOT(STC)         +Show all TSO users and batch jobs
+ $DA A=2C               +Show address space id x'002C'
+ $DA MYTSOID ENQ(OFF)   +Show address space MYTSOID and turn off the enqueue
+                         display.
+
!Command Shortcuts
+ $OJOB+or$JOBS          +DA * ONLY(JOB)
+ $OSTC+or$SYSTEM        +DA * ONLY(STC)
+ $OTSU+or$USERS         +DA * ONLY(TSU)
+
+When more than one address space matches the specified pattern, a summary list
+of address spaces is displayed.
+
!Output Panel Fields (Multiple Address Spaces)
  @Jobname              +- The address space name.
  @Step                 +- The name of the current step.
  @ProcStep             +- The name of the current procedure step.
  @JobID                +- JES assigned job identifier (if available)
  @C                    +- Job Class
  @ASID                 +- The address space identifier in hex.
  @Pos                  +- The position of the address space:
                           ¢IN  +- Swapped in
                           ¢OUT +- Swapped out
                           ¢N/S +- Non-Swappable
                           ¢<-> +- In transition
  @SW                   +- The reason for the address space being swapped out :
                           ¢AW +APPC wait
                           ¢DW +Detected wait
                           ¢EX +Exchange
                           ¢IC +Improve central storage
                           ¢IP +Improve system paging
                           ¢IW +Input wait
                           ¢LW +Long wait
                           ¢MR +Make room
                           ¢NQ +Enqueue exchange
                           ¢OW +Output wait
                           ¢RQ +Requested swap
                           ¢RS +Central storage shortage
                           ¢TI +Terminal input wait
                           ¢TO +Terminal output wait
                           ¢TS +Transition swap
                           ¢US +Unilateral
                           ¢XS +Auxiliary storage shortage
  @Workset              +- The size of the working set in kilobytes
  @EXCP                 +- The number of EXCPs for this step
  @SIO                  +- The number of EXCPs per second
  @CPU%                 +- The address space CPU usage percent. This is
                        +  calculated without LPAR adjustment and weighting.
+
!Output Panel Fields (Single Address Space)
+When only one address space matches the specified pattern, a more
+detailed display is shown. This is split into five sections :
+
!Identification
  @Address Space        +- The address space name.
  @ASID (Hex)           +- The address space identifier in hex.
  @Step Name            +- The name of the current step.
  @ASID (Dec)           +- The address space identifier in hex.
  @Procedure Step       +- The name of the current procedure step.
  @JES Jobid            +- JES assigned job identifier (if available).
  @Class                +- Job Class
  @Userid               +- Assigned userid for the address space
  @Start Date           +- The date (yyyy/mm/dd) that the ASID was started.
  @Start Time           +- The time (hh.mm.ss) that the ASID was started.
  @ASCB Address         +- The address of the ASCB for this address space.
  @Perf Group Num       +- The performance group number (Compatibility Mode).
  @Service Class        +- The WLM service class (Goal Mode).
  @Resource Group       +- The WLM resource group (Goal Mode).
  @Reporting Class      +- The WLM reporting class (Goal Mode).
+
!Resource Consumption
  @TCB CPU Time         +- The number of TCB CPU Seconds used in this step.
  @Position             +- The position of the address space.
  @SRB CPU Time         +- The number of SRB CPU Seconds used in this step.
  @Priority             +- The dispatching priority of the address space.
  @Total CPU Time       +- The number of CPU (TCB+SRB) seconds used in this step
  @EXCP-Count           +- The number of EXCPs for this step.
  @Pos                  +- The position of the address space.
  @CPU Time Limit       +- The maximum CPU seconds that this job can use or one
                        +  of the special values 'NoLimit' or 'Not Timed'.
  @EXCP Rate            +- The number of EXCPs per second.
  @CPU Percentage       +- The address space CPU usage percent. This is
                        +  calculated without LPAR adjustment and weighting.
+
!Storage Usage
  @Real Frames          +- The number of Real storage frames used.
  @Working Set (K)      +- The size of the working set in kilobytes.
  @Expanded Frames      +- The number of Expanded storage frames used.
  @Fixed Frames         +- The number of fixed frames used.
  @VIO Slots            +- The number of VIO auxiliary storage slots.
  @Non-VIO Slots        +- The number of non-VIO auxiliary storage slots.
  @Dataspace            +- The number of user key dataspace blocks (4K).
  @Hiperspace           +- The number of hiperspace pages in expanded storage.
  @UIC xxx->yyy         +- The number of frames in the UIC range xxx to yyy.
  @CSA                  +- The amount of CSA allocated in bytes.
  @Extended CSA         +- The amount of Extended CSA allocated in bytes.
  @SQA                  +- The amount of SQA allocated in bytes.
  @Extended SQA         +- The amount of Extended SQA allocated in bytes.
  @Region Requested ¢(*)+- The region size requested by the address space.
  @Region >16M      ¢(*)+- The region size above the 16Mb line allocated.
  @Region >16M Used ¢(*)+- The region size above the 16Mb line in use.
  @Region >16M Free ¢(*)+- The region size above the 16Mb line that is free.
  @Region <16M      ¢(*)+- The region size below the 16Mb line allocated.
  @Region <16M Used ¢(*)+- The region size below the 16Mb line in use.
  @Region <16M Free ¢(*)+- The region size below the 16Mb line that is free.
+
!Enqueues Held
  @Major Name           +- The major name used to enqueue the resource
  @Minor Name           +- The minor name used to enqueue the resource
  @RQ                   +- The status of the enqueue :
                        +  ¢S   +: Job has shared control of the resource
                        +  ¢E   +: Job has exclusive control of the resource
                        +  ¢SW  +: Job is waiting for shared control
                        +  ¢EW  +: Job is waiting for exclusive control
                        +  ¢SO  +: Job has shared control of the resource and
                        +          other jobs are waiting for exclusive control
                        +  ¢EO  +: Job has exclusive control of the resource and
                        +          other jobs are waiting for exclusive or
                        +          shared control
                        +  ¢xxR +: Enqueue is in fact a RESERVE
                        +  ¢xxG +: RESERVE has been converted to a Global
+                               +  Enqueue.

!Cross Memory Connections
  @Type             ¢(*)+- The type of connection (To/From/Both)
  @Jobname          ¢(*)+- The name of the connected task
  @ASID             ¢(*)+- The hex ASID of the connected task
  @Status           ¢(*)+- The status of the connected task
                        +  ¢Active    + The address space is still active
                        +  ¢Inactive  + The address space has terminated
                        +  ¢System LX + This is a system LX connection
+
+                   ¢(*)+- Only available when MXI is running authorized.

)INIT
.ATTRCHAR(¢)  = 'COLOR(&M7CC) HILITE(&M7CH) INTENS(&M7CI)'
.ATTRCHAR(!)  = 'COLOR(&M08C) HILITE(&M08H) INTENS(&M08I)'
.ATTRCHAR(+)  = 'COLOR(&M06C) HILITE(&M06H) INTENS(&M06I)'
.ATTRCHAR($)  = 'COLOR(&M09C) HILITE(&M09H) INTENS(&M09I)'
)PROC
 &ZUP   = MXIHTOC
 &ZCONT = MXIHDAE
)END
