MXISECX1 TITLE 'MXI TCP/IP Security Exit'
*-------------------------------------------------------------------*
* Name            : MXISECX1
*
* Function        : MXI TCP/IP Security Exit
*
* Register Usage  :
* r1  - parameter passed : +0 Input message
*                        : +4 Client TCP/IP address
* r2  - Work
* r3  - Input message (mapped by MXIPMSG)
* r4  - Client IP address
* r5  -
* r6  -
* r7  -
* r8  -
* r9  - RC
* r10 -
* r11 -
* r12 - base
* r13 - work area
*
*
* Attributes : RENT AC(1) AMODE(31) RMODE(ANY)
*
*-------------------------------------------------------------------*
* Changes
* 2003/01/29   Rob Scott     Code Written                      V4.3
*-------------------------------------------------------------------*
MXISECX1 CSECT
MXISECX1 AMODE 31
MXISECX1 RMODE ANY
         BAKR  R14,R0                 linkage stack
         LR    R12,R15                copy entry address to base
         USING MXISECX1,R12           address it
         LR    R2,R1                  copy parms passed
GETSTOR  DS    0H
         STORAGE OBTAIN,              get the workarea storage         X
               LENGTH=WORKLEN,        this much                        X
               ADDR=(R13),            put address in r13               X
               SP=0,KEY=8,                                             X
               LOC=ANY,               anywhere                         X
               COND=NO                unconditional
         USING WORKAREA,R13           address workarea
         LR    R14,R13                Copy workarea address
         L     R15,=A(WORKLEN)        Get length of workarea
         XR    R0,R0                  Clear
         XR    R1,R1                  Clear
         MVCL  R14,R0                 Init to zeros
         MVC   4(4,R13),=C'F1SA'      set acronym
*-------------------------------------------------------------------*
* Copy in model RACROUTE macros to list forms
*-------------------------------------------------------------------*
         MVC   VERIFYC(VERIFYCL),VERIFYCM
         MVC   VERIFYD(VERIFYDL),VERIFYDM
         XR    R9,R9                  Zero return code
GETPARMS DS    0H
         LM    R3,R4,0(R2)            Copy in parms
         USING MXIPMSG,R3
         MVC   CLIENTIP(4),0(R4)      Copy in IP Address
*-------------------------------------------------------------------*
* Ignore MVS->MVS client conversations as we trust the sending
* system to have verified userid/password.
*-------------------------------------------------------------------*
         CLC   MXIPOS(8),=CL8'MVS'    Check for MVS->MVS
         BE    RETURN                 Yes - no need to RACROUTE
*-------------------------------------------------------------------*
* As supplied, this exit will do nothing.
* To use the RACF password checking exit you need to do the
* following :
* (1) Adjust your client application to send the RACF userid and
*     password in the first 16 bytes of the userdata portion of the
*     MXI TCP/IP request message. (Remember to send in EBCDIC!).
* (2) Comment out the following line of code
*-------------------------------------------------------------------*
         B     RETURN                 Comment out to invoke CHECKPW
*
CHECKPW  DS    0H
*-------------------------------------------------------------------*
* Sample code to perform a RACF userid/password check
* This code assumes :
* (1) RACF userid is in the first 8 bytes of the userdata portion
*     of the incoming TCP/IP request.
* (2) RACF password is in the second 8 bytes of the userdata portion
*     of the incoming TCP/IP request.
* (3) Both the userid and password fields are terminated with spaces
*     or x'00' if less than 8 bytes long.
*-------------------------------------------------------------------*
         MVC   USERID(8),MXIPUDAT     Copy in userid
         LA    R1,USERID
         BAL   R14,GETLEN             Get length of userid
         STCM  R15,B'0001',USERIDL
         MVC   PASSWRD(8),MXIPUDAT+8  Copy in password
         LA    R1,PASSWRD
         BAL   R14,GETLEN             Get length of password
         STCM  R15,B'0001',PASSWRDL
*-------------------------------------------------------------------*
* Attempt to create an ACEE with userid and password
*-------------------------------------------------------------------*
         RACROUTE REQUEST=VERIFY,     Model RACROUTE                   x
               ENVIR=CREATE,                                           x
               ACEE=@ACEE,                                             x
               USERID=USERIDL,                                         x
               PASSCHK=YES,                                            x
               PASSWRD=PASSWRDL,                                       x
               RELEASE=1.8,1,         Lowest release                   x
               WORKA=RACFWORK,        Use this workarea                x
               MF=(E,VERIFYC)
         LTR   R9,R15                 Return RACF rc to MXISERV
         BNZ   RETURN
*-------------------------------------------------------------------*
* ACEE was created - need to clean it up before returning
*-------------------------------------------------------------------*
         RACROUTE REQUEST=VERIFY,     Model RACROUTE                   x
               ENVIR=DELETE,                                           x
               ACEE=@ACEE,                                             x
               RELEASE=1.8,1,         Lowest release                   x
               WORKA=RACFWORK,        Use this workarea                x
               MF=(E,VERIFYD)
RETURN   STORAGE RELEASE,             release workarea storage         X
               LENGTH=WORKLEN,                                         X
               ADDR=(R13),                                             X
               SP=0,KEY=8,                                             X
               COND=NO
         LR    R15,R9                 Pass back rc (maybe from RAC)
         PR                           return
*
GETLEN   DS    0H
*-------------------------------------------------------------------*
* Routine to calc the length of a string terminated by space or null
* R1 = Input string
* R15= Output length
*-------------------------------------------------------------------*
         ST    R14,R14SAVE            Save ret address
         LA    R14,8                  max eight chars
         XR    R15,R15                Clear
LENLOOP  CLI   0(R1),X'40'            Is it a blank ?
         BE    GOTLEN                 Yes
         CLI   0(R1),X'00'            Is it a null ?
         BE    GOTLEN                 Yes
         LA    R15,1(,R15)            Add to length
         LA    R1,1(,R1)              Point to next byte
         BCT   R14,LENLOOP            Check next byte
GOTLEN   L     R14,R14SAVE
         BR    R14
*
*-------------------------------------------------------------------*
* DSECTS
*-------------------------------------------------------------------*
VERIFYCM RACROUTE REQUEST=VERIFY,     Model RACROUTE                   x
               ENVIR=CREATE,                                           x
               ACEE=*-*,                                               x
               USERID=*-*,                                             x
               PASSCHK=YES,                                            x
               PASSWRD=*-*,                                            x
               RELEASE=1.8,1,         Lowest release                   x
               WORKA=*-*,             Use this workarea                x
               MF=L
VERIFYCL EQU   *-VERIFYCM             Length of model macro
*
VERIFYDM RACROUTE REQUEST=VERIFY,     Model RACROUTE                   x
               ENVIR=DELETE,                                           x
               ACEE=*-*,                                               x
               RELEASE=1.8,1,         Lowest release                   x
               WORKA=*-*,             Use this workarea                x
               MF=L
VERIFYDL EQU   *-VERIFYDM             Length of model macro
*
WORKAREA DSECT
SAVEAREA DS    18F
R14SAVE  DS    F
@ACEE    DS    F
CLIENTIP DS    AL1(0),AL1(0),AL1(0),AL1(0)
USERIDL  DS    X
USERID   DS    CL8
PASSWRDL DS    X
PASSWRD  DS    CL8
         DS    0D
VERIFYC  DS    CL(VERIFYCL)
         DS    0D
VERIFYD  DS    CL(VERIFYDL)
         DS    0D
RACFWORK DS    XL512
         DS    0D
WORKLEN  EQU   *-WORKAREA
*
         YREGS
         MXIPMSG
         END
